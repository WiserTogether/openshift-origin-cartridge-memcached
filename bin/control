#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH
export STOPTIMEOUT=50
set +x
export >> /tmp/tmp.log 2>&1
function _log() {
	echo "$(date): $@" >> /tmp/tmp.log #$OPENSHIFT_MEMCACHED_DIR/logs/memcached.log
}

function read_pid() {
    if [ -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached1.pid ]; then
        echo $(<$OPENSHIFT_MEMCACHED_DIR/pid/memcached1.pid)
    fi
}

function isrunning() {
    local pid=`read_pid`
    kill -0 "$pid" 2>/dev/null || return 1
}

function _wait_for_memcached_to_startup() {
    for ((i=0; i<5; i++)); do
        if [ -f ${OPENSHIFT_MEMCACHED_DIR}/pid/memcached1.pid ]; then
            if [ "$DISABLE_SASL" != "1" ]; then
                return 0
            fi
            if memcached-tool $OPENSHIFT_MEMCACHED_HOST:$OPENSHIFT_MEMCACHED_PORT #&>/dev/null;
            then
                return 0
            fi
        fi
        sleep 0.5
    done
    return 1
}

function start() {
    if ! isrunning
    then
        source $OPENSHIFT_MEMCACHED_DIR/conf/memcached.conf
        if [ "$DISABLE_SASL" != "1" ]; then
            export MEMCACHED_SASL_PWDB=$OPENSHIFT_MEMCACHED_DIR/conf/sasldb
            OPTIONS="$OPTIONS -S"
        fi


        memcached -d -p $OPENSHIFT_MEMCACHED_PORT1 -U 0 -l $OPENSHIFT_MEMCACHED_HOST -u `id -u` -m $CACHESIZE -c $MAXCONN -P $OPENSHIFT_MEMCACHED_DIR/pid/memcached1.pid $OPTIONS -vv & >>  $OPENSHIFT_MEMCACHED_DIR/logs/memcached.log 2>&1
        memcached -d -p $OPENSHIFT_MEMCACHED_PORT2 -U 0 -l $OPENSHIFT_MEMCACHED_HOST -u `id -u` -m $CACHESIZE -c $MAXCONN -P $OPENSHIFT_MEMCACHED_DIR/pid/memcached2.pid $OPTIONS -vv & >>  $OPENSHIFT_MEMCACHED_DIR/logs/memcached.log 2>&1
        


        if [ $? -ne 0 ]; then
            client_message "Memcached has failed to start"
            _log "Memcached has failed to start"
        fi
        if _wait_for_memcached_to_startup; then
            client_result "Memcached started"
            _log "Memcached started with PID=$(read_pid), OPTIONS=\"$OPTIONS\""
        fi
    else
        client_result "Memcached already running"
    fi
}

function stop() {

        killall memcached
        if `pgrep -x memcached >/dev/null 2>&1`
        then
            client_message "Memcached process exists without a pid file. Use force-stop to kill."
        else
            client_result "Memcached already stopped"
        fi
        /bin/rm -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached1.pid
        /bin/rm -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached2.pid

}

case "$1" in
    start)
        _log "Control start"
        start
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        start
    ;;
    status)
        _log "Status"
        if isrunning
        then
            client_result "Memcached is running"
        else
            client_result "Memcached is stopped"
        fi
        exit 0
    ;;
esac
