#!/bin/bash -e
source $OPENSHIFT_CARTRIDGE_SDK_BASH
export STOPTIMEOUT=20

function isrunning() {
    if [ -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid ]; then
        set +e
        memcached_pid=`cat $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid 2> /dev/null`
        set -e
        myid=`id -u`
        if `ps --pid $memcached_pid 2>&1 | grep memcached > /dev/null 2>&1` || `pgrep -x memcached -u $myid > /dev/null 2>&1`
        then
            return 0
        fi
     fi
     return 1
}

function _wait_for_memcached_to_startup() {
    i=0
    while ( (! echo "exit" | mongo $IP > /dev/null 2>&1) ||  \
            [ ! -f ${OPENSHIFT_MEMCACHED_DIR}/pid/memcached.pid ]) && [ $i -lt 20 ]; do
        sleep 1
        i=$(($i + 1))
    done
}

function start() {
    if ! isrunning
    then
       source $OPENSHIFT_MEMCACHED_DIR/conf/memcached.conf
	/usr/bin/memcached -d -p $PORT -l ${OPENSHIFT_INTERNAL_IP} -u `id -u`  -m $CACHESIZE -c $MAXCONN -P ${OPENSHIFT_MEMCACHED_DIR}/pid/memcached.pid $OPTIONS 2>&1 &
	_wait_for_memcached_to_startup
    else
        client_result "Memcached already running"
    fi
}

function stop() {
    if [ -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid ]; then
        set +e
        pid=$( /bin/cat $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid 2>/dev/null )
        set -e
    fi

    if [ -n "$pid" ]; then
        set +e
        /bin/kill $pid 2>/dev/null
        set -e
        ret=$?
        if [ $ret -eq 0 ]; then
            TIMEOUT="$STOPTIMEOUT"
            while [ $TIMEOUT -gt 0 ] && [ -f "$OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid" ]; do
                set +e
                /bin/kill -0 "$pid" >/dev/null 2>&1 || break
                set -e
                sleep 1
                let TIMEOUT=${TIMEOUT}-1
            done
            /bin/rm -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid
        fi
    else
        if `pgrep -x memcached > /dev/null 2>&1`
        then
                client_result "Warning: Memcached process exists without a pid file.  Use force-stop to kill."
        else
            client_result "Memcached already stopped"
        fi
     fi
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        start
    ;;
    status)
        if isrunning
        then
            client_result "Memcached is running"
        else
            client_result "Memcached is stopped"
        fi
        exit 0
    ;;
esac
